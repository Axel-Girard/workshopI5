
// Constantes internes

// Fait avancer la PU en cours. 
// Parametre action : nom de la transition correspondant à l'action utilisateur (doit correspondre à une action dans le graphe de PU)
function fwkPUAvancer(prm_action) {	
	var frmFWK;
	frmFWK = document.forms.frm_fwk;
	frmFWK.fwkcodeaction.value = 'Executer';
	frmFWK.fwkaction.value = prm_action;
	frmFWK.submit();
}
// 
// Abandonne la PU en cours
function fwkPUAbandonner() {
	var frmFWK;
	frmFWK = document.forms.frm_fwk;
	frmFWK.fwkcodeaction.value = 'Abandonner';
	frmFWK.fwkaction.value = '';	
	frmFWK.submit();
}
//
// Affiche l'erreur applicative dans une popup
function fwkErreur(prm_mess, prm_niv) {
	if (prm_mess) {
		if (prm_niv) {
			window.alert('ERREUR !!!\nNiveau : ' + prm_niv + '\nMessage : ' + prm_mess);
		}
		else {
			window.alert('ERREUR !!!\nMessage : ' + prm_mess);
		}
	}
}
//
// Lancer une PU de manière asynchrone, et rediriger la page vers une deuxième url
function fwkLancerPUAsync(url, urlredirection) {
	window.location.href=urlredirection;
	var requete;
	if (window.XMLHttpRequest) {
		requete = new XMLHttpRequest();
	} else if (window.ActiveXObject) {
		requete = new ActiveXObject("Microsoft.XMLHTTP");
	}
	requete.open("GET", url, true);
	requete.send(null);
	
}